# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2018 replay file
# Internal Version: 2017_11_07-11.21.41 127140
# Run by sebastian.chirinos on Thu Oct  1 11:12:30 2020
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=79.6100006103516, 
    height=120.269996643066)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('CrossAsymmetric.cae')
#: The model database "C:\Users\sebastian.chirinos\O-REU\Cross Assembly\CrossAsymmetric\CrossAsymmetric.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-1'].parts['Cross']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p = mdb.models['Model-1'].parts['Cross']
p.generateMesh()
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    datumPlanes=OFF)
p = mdb.models['Model-1'].parts['Cross']
f = p.faces
pickedRegions = f.getSequenceFromMask(mask=('[#ff0 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-1'].parts['Cross']
f = p.faces
pickedRegions = f.getSequenceFromMask(mask=('[#ff0 ]', ), )
p.setMeshControls(regions=pickedRegions, elemShape=TRI)
p = mdb.models['Model-1'].parts['Cross']
p.generateMesh()
p = mdb.models['Model-1'].parts['Cross']
p.deleteMesh()
p = mdb.models['Model-1'].parts['Cross']
p.seedPart(size=0.0003, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['Model-1'].parts['Cross']
p.generateMesh()
p = mdb.models['Model-1'].parts['Cross']
f = p.faces
pickedRegions = f.getSequenceFromMask(mask=('[#ff0 ]', ), )
p.deleteMesh(regions=pickedRegions)
p = mdb.models['Model-1'].parts['Cross']
f = p.faces
pickedRegions = f.getSequenceFromMask(mask=('[#ff0 ]', ), )
p.setMeshControls(regions=pickedRegions, technique=FREE)
p = mdb.models['Model-1'].parts['Cross']
p.generateMesh()
p = mdb.models['Model-1'].parts['Cross']
s = p.features['Partition face-1'].sketch
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=s)
s1 = mdb.models['Model-1'].sketches['__edit__']
g, v, d, c = s1.geometry, s1.vertices, s1.dimensions, s1.constraints
s1.setPrimaryObject(option=SUPERIMPOSE)
p.projectReferencesOntoSketch(sketch=s1, 
    upToFeature=p.features['Partition face-1'], filter=COPLANAR_EDGES)
s=mdb.models['Model-1'].sketches['__edit__']
s.parameters['CornerEdge'].setValues(expression='0.15*SubWidth')
s1.unsetPrimaryObject()
p = mdb.models['Model-1'].parts['Cross']
p.features['Partition face-1'].setValues(sketch=s1)
del mdb.models['Model-1'].sketches['__edit__']
p = mdb.models['Model-1'].parts['Cross']
p.regenerate()
#: Warning: Failed to attach mesh to part geometry.
p = mdb.models['Model-1'].parts['Cross']
p.generateMesh()
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.0377991, 
    farPlane=0.0384111, width=0.0022247, height=0.00118156, 
    viewOffsetX=0.00444772, viewOffsetY=-0.00316215)
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
p = mdb.models['Model-1'].parts['Cross']
s = p.features['Partition face-1'].sketch
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=s)
s2 = mdb.models['Model-1'].sketches['__edit__']
g, v, d, c = s2.geometry, s2.vertices, s2.dimensions, s2.constraints
s2.setPrimaryObject(option=SUPERIMPOSE)
p.projectReferencesOntoSketch(sketch=s2, 
    upToFeature=p.features['Partition face-1'], filter=COPLANAR_EDGES)
s=mdb.models['Model-1'].sketches['__edit__']
s.parameters['CornerEdge'].setValues(expression='0.18*SubWidth')
s2.unsetPrimaryObject()
p = mdb.models['Model-1'].parts['Cross']
p.features['Partition face-1'].setValues(sketch=s2)
del mdb.models['Model-1'].sketches['__edit__']
p = mdb.models['Model-1'].parts['Cross']
p.regenerate()
#: Warning: Failed to attach mesh to part geometry.
p = mdb.models['Model-1'].parts['Cross']
p.generateMesh()
p = mdb.models['Model-1'].parts['Cross']
s = p.features['Partition face-1'].sketch
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=s)
s1 = mdb.models['Model-1'].sketches['__edit__']
g, v, d, c = s1.geometry, s1.vertices, s1.dimensions, s1.constraints
s1.setPrimaryObject(option=SUPERIMPOSE)
p.projectReferencesOntoSketch(sketch=s1, 
    upToFeature=p.features['Partition face-1'], filter=COPLANAR_EDGES)
s=mdb.models['Model-1'].sketches['__edit__']
s.parameters['fillet'].setValues(expression='0.04*SubWidth')
s.parameters['Thick13'].setValues(expression='0.05*SubWidth')
s1.unsetPrimaryObject()
p = mdb.models['Model-1'].parts['Cross']
p.features['Partition face-1'].setValues(sketch=s1)
del mdb.models['Model-1'].sketches['__edit__']
p = mdb.models['Model-1'].parts['Cross']
p.regenerate()
#: Warning: Mesh deleted in 11 regions due to geometry association failure.
p = mdb.models['Model-1'].parts['Cross']
p.generateMesh()
p = mdb.models['Model-1'].parts['Cross']
s = p.features['Partition face-1'].sketch
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=s)
s2 = mdb.models['Model-1'].sketches['__edit__']
g, v, d, c = s2.geometry, s2.vertices, s2.dimensions, s2.constraints
s2.setPrimaryObject(option=SUPERIMPOSE)
p.projectReferencesOntoSketch(sketch=s2, 
    upToFeature=p.features['Partition face-1'], filter=COPLANAR_EDGES)
s2.redo()
#* Nothing to redo.
s2.unsetPrimaryObject()
del mdb.models['Model-1'].sketches['__edit__']
p = mdb.models['Model-1'].parts['Cross']
s = p.features['Partition face-1'].sketch
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=s)
s1 = mdb.models['Model-1'].sketches['__edit__']
g, v, d, c = s1.geometry, s1.vertices, s1.dimensions, s1.constraints
s1.setPrimaryObject(option=SUPERIMPOSE)
p.projectReferencesOntoSketch(sketch=s1, 
    upToFeature=p.features['Partition face-1'], filter=COPLANAR_EDGES)
s=mdb.models['Model-1'].sketches['__edit__']
s.parameters['fillet'].setValues(expression='0.02*SubWidth')
s1.unsetPrimaryObject()
p = mdb.models['Model-1'].parts['Cross']
p.features['Partition face-1'].setValues(sketch=s1)
del mdb.models['Model-1'].sketches['__edit__']
p = mdb.models['Model-1'].parts['Cross']
p.regenerate()
#: Warning: Mesh deleted in 9 regions due to geometry association failure.
p = mdb.models['Model-1'].parts['Cross']
p.generateMesh()
mdb.save()
#: The model database has been saved to "C:\Users\sebastian.chirinos\O-REU\Cross Assembly\CrossAsymmetric\CrossAsymmetric.cae".
