# -*- coding: mbcs -*-
from abaqus import *
upgradeMdb(
    'C:/Users/sebastian.chirinos/O-REU/Attribute Space/XYdisplacement_Circle/Baseline_Upgraded-2017.cae'
    , 
    'C:/Users/sebastian.chirinos/O-REU/Attribute Space/XYdisplacement_Circle/Baseline_Upgraded.cae')
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.unlock()
mdb.models['Model-1'].Part(name='Circle-failed', objectToCopy=
    mdb.models['Model-1'].parts['Circle'])
mdb.models['Model-1'].parts['Circle-failed'].Unlock(reportWarnings=False)
del mdb.models['Model-1'].parts['Circle']
mdb.models['Model-1'].parts.changeKey(fromName='Circle-failed', toName=
    'Circle')
mdb.models['Model-1'].rootAssembly.regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Circle'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Circle'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Circle'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[14], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[15], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[16], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[4], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[5], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[5]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, 
    -4.59608221054077), point2=(4.65555953979492, 4.99799156188965))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[24], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[18])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.65555953979492, 
    4.99799156188965), point2=(5.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.0, 5.0), point2=(
    5.00212182612282, 4.63611387254787))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[25], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[26])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.00212182612282, 
    4.63611387254787), point2=(-4.63985693454742, -5.0))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[27], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[19])
mdb.models['Model-1'].sketches['__edit__'].ConstructionLine(point1=(-5.0, -5.0)
    , point2=(5.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[23], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[28])
mdb.models['Model-1'].sketches['__edit__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], symmetryAxis=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[24])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -4.2080864438943, -4.5520986517583), value=0.3, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[24], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[27])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[24])
mdb.models['Model-1'].sketches['__edit__'].AngularDimension(line1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], line2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], textPoint=(
    -3.6885552406311, -4.4875345826149), value=45.0)
mdb.models['Model-1'].parts['Circle'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Circle'].regenerate()
mdb.models['Model-1'].parts['Circle'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.69)
mdb.models['Model-1'].parts['Circle'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].featureOptions.setValues(checkSelfIntersection=ON)
mdb.models['Model-1'].parts.changeKey(fromName='Circle', toName='Cross')
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].Round(edgeList=(
    mdb.models['Model-1'].parts['Cross'].edges[1], 
    mdb.models['Model-1'].parts['Cross'].edges[2], 
    mdb.models['Model-1'].parts['Cross'].edges[4], 
    mdb.models['Model-1'].parts['Cross'].edges[7], 
    mdb.models['Model-1'].parts['Cross'].edges[10], 
    mdb.models['Model-1'].parts['Cross'].edges[12], 
    mdb.models['Model-1'].parts['Cross'].edges[13], 
    mdb.models['Model-1'].parts['Cross'].edges[14], 
    mdb.models['Model-1'].parts['Cross'].edges[15], 
    mdb.models['Model-1'].parts['Cross'].edges[16], 
    mdb.models['Model-1'].parts['Cross'].edges[17], 
    mdb.models['Model-1'].parts['Cross'].edges[18], 
    mdb.models['Model-1'].parts['Cross'].edges[19], 
    mdb.models['Model-1'].parts['Cross'].edges[20], 
    mdb.models['Model-1'].parts['Cross'].edges[21], 
    mdb.models['Model-1'].parts['Cross'].edges[22]), radius=0.5)
#* Round feature failed.
#* Cannot round non manifold edges.
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].ArcByStartEndTangent(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], point1=(
    -4.13011673209342, -4.34224876644936), point2=(-4.30450367927551, -5.0))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[28], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[27])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[29], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[19])
mdb.models['Model-1'].sketches['__edit__'].ArcByStartEndTangent(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], point1=(
    4.67713382723658, 4.46500179288061), point2=(5.0, 4.59537029266357))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[31], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[27])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[32], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[17])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[17])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[31], points=((
    4.68509096922209, 4.47295893486613), (4.725, 4.47295893486613), (4.55, 
    4.375), (4.55, 4.29769802093506), (4.62174415588379, 4.375), (4.725, 4.55), 
    (4.79949855804443, 4.55), (4.7846851348877, 4.55), (4.725, 4.55), (4.725, 
    4.50211620330811), (4.725, 4.49619102478027), (4.49139022827148, 
    4.66505813598633), (4.55, 4.60580635070801), (4.62470626831055, 4.55), (
    4.725, 4.66209506988525), (4.725, 4.62950706481934), (4.725, 
    4.67690753936768), (4.725, 4.67690753936768), (4.725, 4.65616989135742)))
mdb.models['Model-1'].sketches['__edit__'].ArcByStartEndTangent(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], point1=(
    4.512867965644, 4.725), point2=(4.61581897735596, 4.99686622619629))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[34], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[24])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[25])
mdb.models['Model-1'].sketches['__edit__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], symmetryAxis=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28])
#* Symmetry constraint cannot be created.
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[31])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[29], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19])
mdb.models['Model-1'].sketches['__edit__'].ArcByStartEndTangent(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], point1=(
    -4.45161300781098, -4.23948097345504), point2=(-5.0, -4.375))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[37], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[24])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[38], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[18])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[32], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[18])
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[29], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[32])
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[32], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[30])
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[30], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[31])
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], point1=(
    -4.88935528695583, -4.67166996002197))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], point1=(
    -4.72230535745621, -4.93807969987392))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[33], points=((
    -4.7689198988947, -4.55678786453875), (-4.76992774009705, -4.55), (
    -4.86069881916046, -4.49460828304291)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[25], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[26]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[35], points=((
    4.66820681531325, 5.01764840219923), (4.66820681531325, 5.01764840219923), 
    (4.67106819152832, 4.95764446258545), (4.6864013671875, 5.03239440917969), 
    (4.725, 5.04389476776123), (4.8148193359375, 4.99789428710938), (
    4.78798580169678, 4.99214458465576), (4.75540161132813, 4.9959774017334), (
    4.725, 4.9959774017334), (4.66915130615234, 4.9825611114502), (
    4.63656806945801, 4.94231033325195), (4.55, 4.9), (4.55, 4.86947727203369), 
    (4.50815010070801, 4.83880996704102), (4.41231632232666, 4.79280948638916), 
    (4.28773212432861, 4.725), (4.375, 4.76597595214844), (4.51965045928955, 
    4.9), (4.59056758880615, 4.94614410400391), (4.725, 5.02281188964844), (
    4.82631874084473, 5.075), (4.9, 5.075), (4.9, 5.075), (4.84356880187988, 
    4.99981117248535), (4.79181861877441, 4.95189476013184), (4.76306915283203, 
    4.93464374542236), (4.725, 4.9), (4.79565238952637, 4.99214458465576), (
    4.83590221405029, 5.01897811889648), (4.83590221405029, 5.00939464569092), 
    (4.79565238952637, 4.99406147003174), (4.77265167236328, 4.98831081390381), 
    (4.725, 4.96914482116699), (4.6864013671875, 4.94422721862793), (
    4.62506771087646, 4.9), (4.58098411560059, 4.86372661590576), (4.55, 
    4.83689308166504), (4.375, 4.79856014251709), (4.375, 4.775559425354), (
    4.27431488037109, 4.725), (4.27623176574707, 4.725), (4.55, 
    4.8330602645874), (4.55, 4.86947727203369), (4.61165142059326, 4.9), (
    4.6442346572876, 4.95764446258545), (4.66148471832275, 4.97681140899658), (
    4.67873477935791, 5.01322746276855), (4.68065166473389, 5.04389476776123), 
    (4.84356880187988, 5.03622817993164), (4.63656806945801, 4.9), (4.55, 
    4.86756038665771), (4.51198387145996, 4.83497714996338), (4.49281692504883, 
    4.82539367675781), (4.49090003967285, 4.82539367675781)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.0, 4.66874885758099), 
    point2=(5.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[33])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[33])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.0, 5.0), point2=(
    4.73623466491699, 5.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[34])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[33], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[34])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[35], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[40])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.58451892850072, 
    4.79665096285668), point2=(-4.79665096285669, -4.58451892850074))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(addUndoState=False
    , entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[31], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[35])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-4.58451892850073, 
    -4.79665096285669), point2=(4.7966509628567, 4.58451892850072))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(addUndoState=False
    , entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[29], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[36])
mdb.models['Model-1'].sketches['__edit__'].dimensions[6].setValues(value=0.5)
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#38 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#38 ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#40 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].setLogicalCorners(corners=(
    mdb.models['Model-1'].parts['Cross'].vertices[25], 
    mdb.models['Model-1'].parts['Cross'].vertices[26], 
    mdb.models['Model-1'].parts['Cross'].vertices[27], 
    mdb.models['Model-1'].parts['Cross'].vertices[28], 
    mdb.models['Model-1'].parts['Cross'].vertices[29]), region=
    mdb.models['Model-1'].parts['Cross'].faces[6])
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#40 ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.meshEditOptions.setValues(enableUndo=True, maxUndoCacheElements=0.5)
mdb.models['Model-1'].parts['Cross'].deleteMeshAssociationWithGeometry(
    addBoundingEntities=True, geometricEntities=Region(
    faces=mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(mask=(
    '[#40 ]', ), )))
mdb.models['Model-1'].parts['Cross'].associateMeshWithGeometry(geometricEntity=
    mdb.models['Model-1'].parts['Cross'].vertices[25], node=
    mdb.models['Model-1'].parts['Cross'].nodes[24])
mdb.models['Model-1'].parts['Cross'].associateMeshWithGeometry(geometricEntity=
    mdb.models['Model-1'].parts['Cross'].vertices[25], node=
    mdb.models['Model-1'].parts['Cross'].nodes[27])
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#1 ]', ), 
    ))
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].deleteMeshAssociationWithGeometry(
    addBoundingEntities=True, geometricEntities=Region(
    faces=mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(mask=(
    '[#1ff ]', ), ), 
    edges=mdb.models['Model-1'].parts['Cross'].edges.getSequenceFromMask(mask=(
    '[#ffffffff #1fff ]', ), ), 
    vertices=mdb.models['Model-1'].parts['Cross'].vertices.getSequenceFromMask(
    mask=('[#ffffffff #1f ]', ), )))
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#c0 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#40 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].vertices[29], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[25])
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#202 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#200 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].vertices[14], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[36])
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#e0 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#5eb ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].Set(elements=
    mdb.models['Model-1'].parts['Cross'].elements.getSequenceFromMask(mask=(
    '[#1 ]', ), ), name='PoorElements-1')
mdb.models['Model-1'].parts['Cross'].deleteNode(nodes=
    mdb.models['Model-1'].parts['Cross'].nodes.getSequenceFromMask(mask=(
    '[#ffffffff:90 #f ]', ), ))
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#357 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#200 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].vertices[10], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[5])
mdb.models['Model-1'].parts['Cross'].deleteMeshAssociationWithGeometry(
    addBoundingEntities=True, geometricEntities=Region(
    faces=mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(mask=(
    '[#fff ]', ), ), 
    edges=mdb.models['Model-1'].parts['Cross'].edges.getSequenceFromMask(mask=(
    '[#ffffffff #ffff ]', ), ), 
    vertices=mdb.models['Model-1'].parts['Cross'].vertices.getSequenceFromMask(
    mask=('[#ffffffff #1f ]', ), )))
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMeshAssociationWithGeometry(
    addBoundingEntities=True, geometricEntities=Region(
    faces=mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(mask=(
    '[#950 ]', ), )))
mdb.models['Model-1'].parts['Cross'].deleteMeshAssociationWithGeometry(
    addBoundingEntities=True, geometricEntities=Region(
    faces=mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(mask=(
    '[#fff ]', ), ), 
    edges=mdb.models['Model-1'].parts['Cross'].edges.getSequenceFromMask(mask=(
    '[#ffffffff #ffff ]', ), ), 
    vertices=mdb.models['Model-1'].parts['Cross'].vertices.getSequenceFromMask(
    mask=('[#ffffffff #1f ]', ), )))
mdb.models['Model-1'].parts['Cross'].setMeshControls(elemShape=QUAD_DOMINATED, 
    regions=mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask((
    '[#bd6 ]', ), ))
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteNode(nodes=
    mdb.models['Model-1'].parts['Cross'].nodes.getSequenceFromMask(mask=(
    '[#ffffffff:167 #3fff ]', ), ))
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#401 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#401 ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].generateMesh()
del mdb.models['Model-1'].parts['Cross'].sets['PoorElements-1']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.features.changeKey(fromName='Circle-1', 
    toName='Cross-1')
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[6].setValues(value=0.3)
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[31], points=((
    4.79665096285669, 4.58451892850072), (4.79665096285669, 4.55), (4.725, 
    4.55), (4.725, 4.55)))
mdb.models['Model-1'].sketches['__edit__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], radius=0.5, 
    textPoint=(5.0, 4.43577289581299))
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.5', name=
    'Fillet', path='dimensions[8]')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.3', name=
    'Width', path='dimensions[6]', previousParameter='Fillet')
mdb.models['Model-1'].sketches['__edit__'].parameters['Fillet'].setValues(
    expression='0.8')
mdb.models['Model-1'].sketches['__edit__'].parameters['Width'].setValues(
    expression='0.5')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials.changeKey(fromName='Aluminum', toName=
    'stiffMaterial')
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#bd4 ]', 
    ), ), name='Set-15')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[0].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-15'])
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#429 ]', 
    ), ), name='Set-16')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[1].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-16'])
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#bd6 ]', 
    ), ), name='Set-17')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[0].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-17'])
mdb.models['Model-1'].sections['StiffShell'].setValues(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='stiffMaterial', 
    nodalThicknessField='', numIntPts=5, preIntegrate=OFF, thickness=1.0, 
    thicknessField='', thicknessType=UNIFORM)
mdb.models['Model-1'].parts['Cross'].regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].materials['stiffMaterial']
mdb.models['Model-1'].Material(description=
    'E = 70E9 Pa\nnu = 0.33\nrho = 2840 kg/m^3', name='Aluminum 2219')
mdb.models['Model-1'].materials['Aluminum 2219'].Density(table=((2840.0, ), ))
mdb.models['Model-1'].materials['Aluminum 2219'].Elastic(table=((70000000000.0, 
    0.33), ))
mdb.models['Model-1'].Material(description=
    'E = 135E9 Pa\nnu = 0.312\nrho = 8320 kg/m^3', name='Kovar Steel')
mdb.models['Model-1'].materials['Kovar Steel'].Density(table=((8320.0, ), ))
mdb.models['Model-1'].materials['Kovar Steel'].Elastic(table=((135000000000.0, 
    0.312), ))
mdb.models['Model-1'].Material(description=
    'E = 113E9 Pa\nnu = 0.331\nrho = 4430 kg/m^3', name='Titanium Alpha-Beta')
mdb.models['Model-1'].materials['Titanium Alpha-Beta'].Density(table=((4430.0, 
    ), ))
mdb.models['Model-1'].materials['Titanium Alpha-Beta'].Elastic(table=((
    113000000000.0, 0.331), ))
mdb.models['Model-1'].sections['StiffShell'].setValues(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='Aluminum 2219', 
    nodalThicknessField='', numIntPts=5, preIntegrate=OFF, thickness=1.0, 
    thicknessField='', thicknessType=UNIFORM)
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Cross'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#429 ]', 
    ), ), technique=FREE)
mdb.models['Model-1'].sections['StiffShell'].setValues(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='Kovar Steel', 
    nodalThicknessField='', numIntPts=5, preIntegrate=OFF, thickness=1.0, 
    thicknessField='', thicknessType=UNIFORM)
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].sections['StiffShell'].setValues(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='Titanium Alpha-Beta', 
    nodalThicknessField='', numIntPts=5, preIntegrate=OFF, thickness=1.0, 
    thicknessField='', thicknessType=UNIFORM)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['Sylgard 184'].Density(table=((970.0, ), ))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[7], ))
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].parts['Cross'].features['Partition face-6']
del mdb.models['Model-1'].parts['Cross'].features['Partition face-2']
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#10 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].vertices[30], point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[29], MIDDLE))
mdb.models['Model-1'].parts['Cross'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#61 ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#100 ]', 
    ), ), technique=FREE)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Cross'].deleteFeatures(('Partition face-3', 
    'Partition face-4', 'Partition face-5', 'Partition face-2'))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#4 ]', ), 
    ), point1=mdb.models['Model-1'].parts['Cross'].vertices[21], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[17])
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#2 ]', ), 
    ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[5], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].vertices[9])
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#8 ]', ), 
    ), point1=mdb.models['Model-1'].parts['Cross'].vertices[16], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[20])
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#80 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].vertices[24], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[35])
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#17f ]', 
    ), ), technique=STRUCTURED)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#17f ]', 
    ), ), name='Set-22')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[0].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-22'])
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#80 ]', 
    ), ), name='Set-23')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[1].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-23'])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Cross'].deleteFeatures(('Mirror-1', 
    'Partition face-4'))
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Cross'].deleteFeatures(('Mirror-2', 
    'Partition face-3'))
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Cross'].deleteFeatures(('Partition face-2', 
    'Partition face-5'))
mdb.models['Model-1'].parts['Cross'].setValues(space=THREE_D, type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[18], points=((-5.0, 
    -0.00982570648193359), (-5.075, 0.0), (-4.725, 0.35), (-4.9, 0.35), (-4.9, 
    0.175), (-5.075, 0.175), (-5.075, 0.0), (-5.075, -0.175), (-4.9, -0.175), (
    -4.9, -0.35), (-4.9, -0.7), (-5.075, -1.05), (-4.9, -0.875), (-5.075, 
    -0.875), (-5.075, -0.875), (-5.075, -0.525), (-5.075, -0.35), (-5.075, 
    0.0), (-5.075, 0.175), (-4.9, 0.875), (-4.9, 0.875), (-4.9, 0.35), (-5.075, 
    0.0), (-4.9, 0.35), (-4.9, 0.35)))
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[18], textPoint=(
    -3.02647018432617, 5.25701904296875), value=10.0)
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], points=((
    -1.90628433227539, -5.0), (-1.925, -4.9), (-1.925, -4.025)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[59], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], points=((
    0.766443252563477, -5.0), (0.7, -4.9), (0.7, -4.725), (0.525, -5.075)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], points=((
    6.38703346252441, -4.72324999590018), (6.3, -4.725), (5.6, -5.075), (5.425, 
    -4.9)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[35], points=((
    2.71507576250485, 5.0), (2.8, 5.075), (3.5, 4.9), (3.85, 4.9), (4.025, 
    5.075), (4.025, 5.075)))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.0, 5.0), point2=(
    -5.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[37])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[37])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[41], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[18])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[37], ))
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[37], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], textPoint=(
    6.44460773468018, -4.01365756988525), value=10.0)
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[4])
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[3])
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], textPoint=(
    1.21951389312744, 10.2358932495117), value=20.0)
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], textPoint=(
    11.1751413345337, 1.72065496444702), value=20.0)
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].copyRotate(angle=90.0, centerPoint=(
    -5.0, -4.9999999970145), objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[32], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[35], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[36], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[29], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[35], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[36], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[34], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[20], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[21], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[22], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[23], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[26], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[33], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[34], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[37]))
mdb.models['Model-1'].sketches['__edit__'].rotate(angle=270.0, centerPoint=(
    -5.0, -4.9999999970145), objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[40], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[41], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[42], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[43], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[44], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[46], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[48], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[49], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[50], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[51], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[52], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[53], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[54], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[55], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[56], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[57]))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[40], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[41], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[42], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[43], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[44], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[46], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[48], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[50], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[51], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[53], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[54], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[57], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[59], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[56], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[55]))
mdb.models['Model-1'].sketches['__edit__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[40], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[41], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[42], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[43], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[44], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[46], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[48], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[50], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[51], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[53], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[54], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[57], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[59], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[76], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[48], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[55], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[56], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[52], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[49], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[32], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[29], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[68], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[36], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[35], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[20], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[21], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[22], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[23], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[33]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[47], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[49], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[56], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[52], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[67], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[74], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[99], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[101], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[108], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[65], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[97], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[104], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[65], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[73], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[97], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[107], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[55], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[65], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[70], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[97], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[103], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[67], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[69], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[99], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[102], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[50], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[51], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[10], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[10], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[176], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[177], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[201], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[217], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[558], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[197], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[201], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[202], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[561], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[250], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[403], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[404], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[423], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[437], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[561], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[263], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[314], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[417], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[560], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[254], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[263], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[313], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[408], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[417], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[424], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[559]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[40], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[41], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[42], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[43], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[44], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[48], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[84], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[111], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[57], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[59], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[76], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[110], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[112]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[75], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[109]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[77], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[78], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[79], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[80], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[81]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[58], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[60], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[61], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[62], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[63], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[64], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[92], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[93], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[94], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[95], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[96], ))
mdb.models['Model-1'].sketches['__edit__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__edit__'].geometry[18], objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[20], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[21], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[22], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[23], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[77], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[78], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[79], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[80], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[81], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[83], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[86], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[89], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[83], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[91], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[82], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[87], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[82], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[90], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[88], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[83], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[85], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[29], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[36], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[32], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[35], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[20], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[21], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[22], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[23], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[33], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[77], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[78], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[79], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[80], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[81], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[34], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[37]))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], points=((
    -7.21050274535082, -7.21050274162553), (-7.175, -7.175), (-14.875, -8.4)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[111], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[111], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], points=((
    -5.32463190122508, -5.32463189796545), (-5.25, -5.25), (-6.125, -4.725), (
    -5.425, -5.075), (-5.075, -5.25)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[69], points=((
    -14.6464466064241, -14.9999999969551), (-14.7, -15.05), (-14.7, -15.05), (
    -14.7, -15.05)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[73], points=((
    -14.3150757567554, -14.9999999970098), (-14.7, -14.875), (-14.35, -14.875), 
    (-14.35, -14.875), (-14.525, -14.7916460037231), (-14.875, -14.7), (
    -14.875, -14.525), (-14.875, -14.4482545852661), (-14.7, 
    -14.4289083480835), (-14.7, -14.35), (-14.525, -14.525), (-14.525, -14.7), 
    (-14.525, -14.875), (-14.525, -14.796483039856), (-14.525, 
    -14.4289083480835), (-14.875, -14.35), (-14.7, -14.35), (-14.35, -14.7), (
    -14.35, -14.875), (-14.35, -14.875), (-14.7, -14.525), (-14.875, -14.525), 
    (-14.525, -14.7), (-14.525, -14.7), (-14.525, -14.7), (-14.7, -14.525), (
    -14.619607925415, -14.525), (-14.525, -14.7), (-14.35, -14.7), (-14.875, 
    -14.35), (-14.7, -14.525)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[113], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[114], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[115], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[116], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[117], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[129], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[130], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[131], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[132], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[133]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[54], points=((-14.7, 
    4.5250000059757), (-14.7, 4.55), (-15.05, 4.55), (-15.225, 4.55), (-15.4, 
    4.55), (-15.575, 4.55), (-15.75, 4.725)))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[66])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[69], points=((
    -14.6464466064241, -15.0000000017896), (-14.7, -15.05), (-14.0, -15.05), (
    -14.0, -15.05), (-14.35, -15.05), (-14.525, -15.05), (-14.175, -15.05), (
    -14.175, -15.05)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[66], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[157])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[69], points=((
    -14.6464466064241, -14.9999999969551), (-14.7, -15.05), (-14.7, -15.225), (
    -14.7, -14.875), (-14.7, -14.175), (-14.7, -14.525), (-14.7, -14.7)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].AngularDimension(line1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], line2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[37], textPoint=(
    3.77624702453613, 4.63701438903809), value=45.0)
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[71], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[105], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[72], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[106], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[315], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[562], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[273], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[316], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[430], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[563]))
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[66], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[48], textPoint=(
    -17.5720748901367, -4.69013023376465), value=20.0)
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[140], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], textPoint=(
    -4.99038028717041, -16.6009035110474), value=20.0)
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[19])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], points=((
    -4.71219171723351, -4.71219171420671), (-4.725, -4.725), (-4.9, -4.9), (
    -4.9, -5.075), (-4.725, -5.25), (-5.075, -4.9), (-5.075, -5.075)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], points=((
    -4.72491111001, -4.7249111069832), (-4.725, -4.725), (-4.9, -4.725)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[18], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[24], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[28], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[29], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[32], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[35], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[36], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[68], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[82], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[83], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[85], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[88], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[91], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[100], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[111], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[118], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[119], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[120], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[123], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[126], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[127], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[134], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[135], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[136], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[139], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[142], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[82], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[134], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[134], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[141], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[82], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[90], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[6], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[80], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[88], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[97], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[98], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[99], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[114], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[118], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[119], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[120], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[121], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[122], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[123], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[138], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[343], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[344], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[364], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[365], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[368], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[369], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[382], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[542], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[545], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[592], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[593], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[613], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[614], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[617], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[618], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[633], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[651], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[652], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[669], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[670], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[671], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[672], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[682], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[760], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[763], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[776], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[779], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[783]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[46], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[53], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[54], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[121], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[122], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[124], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[125], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[128], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[210], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[608], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[621], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[622], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[625], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[626], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[627]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[20], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[21], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[22], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[23], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[25], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[26], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[33], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[34], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[37], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[77], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[78], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[79], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[80], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[81], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[8], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[85], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[105], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[106], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[112], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[113], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[126], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[127], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[130], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[131], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[132], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[142]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[86], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[87], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[89], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[359], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[372], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[373]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[66], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[98], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[137], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[138], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[140], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[665], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[675], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[676]))
mdb.models['Model-1'].sketches['__edit__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].Spot(point=(-5.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].ConstructionLine(angle=0.0, point1=(
    -22.225, -2.8))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[143])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -4.0), point2=(
    -4.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-4.0, -5.0), point2=(
    -5.0, -6.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[144])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -6.0), point2=(
    -6.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[144], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-6.0, -5.0), point2=(
    -5.0, -4.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[146])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -4.0), point2=(
    -5.0, -6.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[147])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-6.0, -5.0), point2=(
    -4.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[148])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[148]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161], points=((-5.0, 
    -5.0), (-5.075, -5.075), (-5.25, -5.075), (-5.075, -5.075), (-5.075, -4.9), 
    (-4.9, -4.725)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161])
mdb.models['Model-1'].sketches['__edit__'].unsetConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[148]))
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[147])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[148]))
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -5.3893483877182, -4.3893483877182), value=1.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[162])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-4.73215198516846, 
    -4.26784801483154), point2=(4.2, 4.66430397037408))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[149])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[166], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[143])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.2, 4.66430397037408), 
    point2=(4.9725980758667, 4.66430397037408))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[150])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.9725980758667, 
    4.66430397037408), point2=(4.9725980758667, 3.85))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[151])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[150], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[151])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.9725980758667, 3.85), 
    point2=(-4.375, -4.625))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[170], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[143])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[168], points=((
    4.9725980758667, 4.66430397037408), (4.9, 4.725), (5.075, 4.9), (5.25, 
    4.725), (4.9, 4.9), (5.075, 5.075), (4.9, 4.9)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[169], points=((4.9, 
    3.78417895292709), (4.9, 3.85), (4.9, 4.375)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[152])
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[151], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[150])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -5.0), point2=(
    4.9, 4.9))
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], ))
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[151], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[150]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.9, 4.9), point2=(4.9, 
    4.06160354614258))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[154])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[150], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[154])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.9, 4.9), point2=(
    3.97617530822754, 4.9))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[155])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[150], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[155])
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[154], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[155])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-4.73215198516846, 
    -4.26784801483154), point2=(3.97349452969502, 4.43779850006104))
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[156])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-4.26784801481247, 
    -4.73215198518753), point2=(4.24664354347624, 3.78233957313932))
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[157])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[175], points=((
    4.24664354347624, 3.78233957313932), (4.2, 3.85), (4.375, 4.025)))
mdb.models['Model-1'].sketches['__edit__'].ArcByStartEndTangent(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[156], point1=(
    4.03064651488279, 4.38064651487351), point2=(4.06160354614258, 4.9))
mdb.models['Model-1'].sketches['__edit__'].ArcByStartEndTangent(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], point1=(4.375, 
    4.025), point2=(4.9, 4.06160354614258))
mdb.models['Model-1'].sketches['__edit__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[159], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[158], symmetryAxis=
    mdb.models['Model-1'].sketches['__edit__'].geometry[153])
mdb.models['Model-1'].sketches['__edit__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[156], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[150], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[151], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[154], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[155], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[156], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[158], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[159]))
mdb.models['Model-1'].sketches['__edit__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[164], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[167], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[168], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[156], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[150], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[151], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[154], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[155], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[156], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[158], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[159]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-15.0, 5.0), point2=(
    5.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[187])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.0, 5.0), point2=(5.0, 
    -15.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[188])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[187], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[188])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.0, -15.0), point2=(
    -15.0, -15.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[189])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[188], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[189])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-15.0, -15.0), point2=(
    -15.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[190])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[189], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[190])
mdb.models['Model-1'].sketches['__edit__'].EqualDistanceConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[190], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[188], midpoint=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161])
mdb.models['Model-1'].sketches['__edit__'].EqualDistanceConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[189], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[187], midpoint=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -5.6192153096199, -16.8281269073486), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[212], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[213])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -16.4973411560059, -4.82467913627625), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[213], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[210])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[144])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[144])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[146])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[146])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[168], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[211])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[154], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[188])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1046], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1047], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1043], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[914], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1044], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[907], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[915], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1045], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[910], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[911], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1040], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1039], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1032], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1035]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1036], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1042], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1037], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1041], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1038], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[916], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1037], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1034]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1033], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[917], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[913], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[912]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[909], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[908]))
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[190], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[187], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[188], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[189]))
mdb.models['Model-1'].sketches['__edit__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[170], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[165], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[166], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[169]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1116], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1118], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1117]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1115], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[208], points=((
    -14.1278375949144, -14.4778375949112), (-14.175, -14.525), (-13.825, 
    -14.175)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[208], points=((
    -14.1278375949144, -14.4778375949112), (-14.175, -14.525), (-14.0, 
    -14.525)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], points=((
    1.19134874342358, -10.6663487434539), (1.225, -10.675), (1.05, -10.85)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1083], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], points=((
    2.81224341391003, -12.2872434139403), (2.8, -12.25), (2.8, -12.425), (2.8, 
    -12.425)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], points=((
    3.01361823081965, -12.6386182308198), (2.975, -12.6), (2.975, -12.775)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], points=((
    -2.77445707318437, -2.57445707324018), (-2.45, -2.8), (-2.45, -3.325)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], points=((
    -12.9502480030484, 3.82524800296356), (-12.95, 3.85), (-13.125, 3.5), (
    -13.3, 3.325), (-13.65, 3.15), (-13.475, 3.325), (-13.475, 3.15)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[951], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[948]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], points=((
    -2.39768030641643, -7.27731969354724), (-2.45, -7.35), (-2.45, -7.35)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[945], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[944], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[933], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[960]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], points=((
    4.09693775178075, -13.7719377517593), (4.025, -13.825), (4.025, -13.825), (
    4.025, -13.825)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], points=((
    -3.55655059813194, -6.64344940184285), (-3.5, -6.65), (-4.025, -7.175)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], textPoint=(
    -5.9503408074379, -6.06720507144928), value=0.5)
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], textPoint=(
    -4.12905341386795, -3.94487845897675), value=0.4)
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[876], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], points=((
    -13.59356679911, 3.91856679921759), (-13.65, 3.85), (-13.65, 3.85)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1084], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[978], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[981], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[951], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[948], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[945], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[944], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[960], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[933], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[955], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[959], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[838], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[835], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[846], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[842], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[832], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[820], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[847], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[831], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[883], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[880], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[876], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[887], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[877], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[892], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[865], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[891]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], points=((
    -6.56916346545417, -3.10583653445423), (-6.475, -2.975), (-5.95, -2.625), (
    -6.3, -2.8), (-6.3, -2.8), (-6.475, -2.8), (-6.475, -2.975)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], points=((
    -4.55450647473234, -5.9954935252655), (-4.55, -5.95), (-4.55, -5.95), (
    -4.375, -5.95), (-4.2, -5.95), (-4.375, -5.95), (-4.375, -5.95), (-4.55, 
    -6.125), (-4.55, -6.125), (-4.725, -6.3), (-4.725, -6.3), (-4.9, -6.3), (
    -4.9, -6.3), (-5.075, -6.475), (-5.075, -6.475), (-5.075, -6.475)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -5.88122273089514, -5.55622273085477), (-5.95, -5.425), (-6.475, -5.075), (
    -6.475, -4.9), (-6.475, -4.9)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1070], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1065]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -6.78170475959768, -5.20670475959794), (-6.74623668193817, -5.25), (-6.65, 
    -5.32527196407318), (-6.57080507278442, -5.425), (-6.475, -5.425), (-6.3, 
    -5.425), (-6.125, -5.6), (-6.3, -5.425), (-6.3, -5.425), (
    -6.21994185447693, -5.50070357322693), (-6.2014753818512, -5.425), (-6.3, 
    -5.425), (-6.3, -5.425), (-6.475, -5.33450531959534), (-6.475, -5.25), (
    -6.475, -5.25), (-6.3, -5.6), (-6.125, -5.6), (-6.125, -5.6), (-5.95, 
    -5.775), (-5.775, -5.775), (-5.6, -5.775), (-5.075, -6.02699840068817), (
    -6.125, -5.425), (-6.65, -5.075), (-6.825, -4.9), (-6.825, -4.9), (
    -6.73700332641602, -4.9), (-6.475, -5.075), (-6.475, -5.075)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].redo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -6.41314742567121, -6.08814742563185), (-6.475, -6.125), (-7.35, -5.6), (
    -7.525, -5.425), (-7.525, -5.425)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], points=((
    -3.39012938833464, -5.47672096777575), (-3.39032673835754, 
    -5.47655975818634), (-3.25123775005341, -5.48302900791168), (
    -3.21242225170135, -5.49030691385269)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], points=((
    -2.31270540946268, -4.38909251758758), (-2.275, -4.375), (-1.575, -4.725), 
    (-1.575, -4.725)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[190], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[196], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[187], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[188], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[189], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[195], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[14], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[13]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], points=((
    -11.1061269282788, -11.4311269283807), (-10.85, -11.725)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[808], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], points=((
    -4.48359358911207, -4.15859358902287), (-4.55, -4.2), (-4.55, -4.025), (
    -4.725, -3.85), (-4.725, -3.85)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -5.85813511016006, -5.53313511011965), (-5.775, -5.6), (-6.125, -5.25), (
    -6.3, -5.25), (-6.3, -5.25), (-5.95, -5.425), (-5.95, -5.425)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -6.05855811834263, -5.53355811834406), (-5.95, -5.6), (-6.3, -5.425), (
    -6.475, -5.25), (-6.3, -5.425), (-6.3, -5.6)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1064], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -6.37466273903783, -5.8496627390391), (-6.3, -5.95), (-6.125, -5.95)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1063], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -5.87355633974195, -5.69855633973955), (-5.95, -5.6), (-5.95, -5.6)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], points=((
    -8.12799878119294, -8.47799878121564), (-8.05, -8.575), (-8.05, -9.1)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], points=((
    -5.82443015575396, -4.52556984424578), (-5.83075678348541, -4.55), (
    -5.87503349781036, -4.55), (-5.775, -4.55), (-5.775, -4.55), (-5.775, 
    -4.55), (-5.83905863761902, -4.55), (-5.83075678348541, -4.55), (-5.775, 
    -4.55), (-5.775, -4.55), (-5.775, -4.55)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], points=((
    -4.13462783098227, -4.48462783098215), (-4.13717031478882, 
    -4.48208522796631), (-4.025, -4.55), (-4.13440322875977, -4.55), (-4.375, 
    -4.47378325462341)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], points=((
    -4.34602242709663, -4.4448056816909), (-4.375, -4.45164489746094), (-4.2, 
    -4.60107898712158)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], points=((
    -5.77733895779504, -4.54766104222191), (-5.775, -4.55), (-5.775, 
    -4.50145626068115), (-5.71453022956848, -4.47931790351868), (
    -5.6757880449295, -4.46548140048981), (-5.67855536937714, 
    -4.47655045986176), (-5.71176290512085, -4.49868893623352), (
    -5.6757880449295, -4.47931790351868), (-5.6, -4.43504106998444), (-5.6, 
    -4.375), (-5.52912127971649, -4.375), (-5.52358675003052, -4.375), (
    -5.5540269613266, -4.42397201061249), (-5.6, -4.43227386474609)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[175], points=((
    -4.89949242215788, -5.10050757419157), (-4.9, -5.075), (-4.84559872746468, 
    -5.075)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], points=((
    -4.84786726535054, -4.84786726533675), (-4.84836605191231, 
    -4.84736847877502), (-4.78195086121559, -4.80585896968842), (-4.725, 
    -4.725), (-4.80962386727333, -4.725), (-4.9, -4.725), (-4.9, -4.725)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], points=((
    -4.83264710009815, -4.83264710008365), (-4.83452954888344, 
    -4.83076465129852), (-4.96182528138161, -4.78372061252594), (
    -5.02270570397377, -4.725), (-5.19981291890144, -4.9), (-5.20258024334908, 
    -4.9)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[184], points=((
    -5.01517144032023, -5.01517144031621), (-5.01759693026543, 
    -5.01274593546987), (-5.03080986440182, -5.00980972126126), (
    -5.03863975405693, -4.99953297898173)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], points=((
    -4.97724537365236, -4.97724537365039), (-4.97746869921684, 
    -4.97702203318477), (-4.96376639604568, -4.95206424221396)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
#* Nothing to undo.
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-6.0, -5.0), point2=(
    -4.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[197])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -4.0), point2=(
    -5.0, -6.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[198])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[175], points=((
    -4.88899952545774, -5.11100047454251), (-4.9, -5.11479514092207), (
    -4.85473626852036, -5.16474610567093), (-4.81905692815781, 
    -5.17426061630249)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], points=((
    -4.93124678358444, -4.93124678358427), (-4.9, -4.9), (-4.9, -4.9), (-4.9, 
    -4.9)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[164], points=((
    -5.04598841443652, -4.95401158556336), (-5.075, -4.95304893702269), (
    -5.075, -4.9), (-5.12352031469345, -4.9), (-5.12589889764786, -4.9)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[184], points=((
    -5.07872116193164, -5.07872116193183), (-5.075, -5.075), (
    -5.20439332723618, -5.12430959194899), (-5.20677202939987, 
    -5.16236752271652)))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[207])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[183], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[195], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-6.0, -5.0), point2=(
    -4.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[197])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -4.0), point2=(
    -5.0, -6.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[198])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[197], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[198]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[187], points=((
    -12.0751547813416, 5.0), (-12.075, 5.075), (-11.9, 5.6), (-11.9, 5.775)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[187], points=((
    -3.58434772491455, 5.775), (-3.5, 5.95), (2.975, 2.275), (6.825, 0.7), (
    4.375, -8.575), (0.35, -17.675), (-2.8, -4.2), (-2.625, -0.525)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[188], points=((
    4.97624195883751, -17.7597198486328), (5.075, -17.675), (9.45, -17.325), (
    16.975, -11.725), (11.9, -11.725), (4.9, -11.025), (4.725, -11.375), (
    5.425, -11.9), (4.9, -12.25), (4.2, -12.775), (4.2, -11.725), (4.725, 
    -11.2), (5.425, -11.025), (5.425, -12.425), (5.25, -13.475), (4.375, 
    -14.35), (3.675, -14.525), (1.225, -13.65), (1.05, -12.775), (2.975, 
    -11.9), (4.9, -12.25), (5.95, -12.6), (5.775, -13.125), (5.25, -13.475), (
    5.425, -13.125), (5.425, -13.825), (3.85, -14.0), (4.9, -13.825), (7.175, 
    -12.25), (6.65, -11.55), (5.95, -12.075), (5.775, -12.425), (6.475, -11.9), 
    (7.175, -11.9), (6.825, -12.25), (6.125, -12.25), (5.6, -12.425), (5.25, 
    -12.95), (5.425, -12.95), (5.425, -12.425), (4.375, -12.6), (4.725, -12.6), 
    (4.9, -12.95), (4.55, -13.3), (5.075, -12.775), (5.425, -13.475), (4.2, 
    -14.35), (6.125, -15.225), (6.475, -15.225)))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[196], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[190])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[195], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[189])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], points=((
    -4.57975857349366, -2.7548415174866), (-4.725, -2.625), (-4.375, -4.025), (
    -4.375, -3.85)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], points=((
    -2.57731361389215, -7.07268638610923), (-2.45, -7.0), (-2.45, -6.825), (
    -2.45, -6.825)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[172], points=((
    4.49152946472168, -14.9762419588525), (4.55, -15.05), (4.375, -14.7), (
    4.55, -14.875)))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[212])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[204], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[213])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[204], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[213])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-15.0563256941264, 
    -14.5461582235504), point2=(-14.9762419588391, -14.976241958864))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-14.9762419588391, 
    -14.976241958864), point2=(-14.5461582235313, -15.0563256941529))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[191], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[199])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[199], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[200]))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[200], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[192])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[190], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[191])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[192], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[189])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[199], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[190])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[217], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[208])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[209], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[218])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[165], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[190])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[182], points=((-5.675, 
    -4.675), (-5.675, -4.725), (-5.6, -4.725)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[178], points=((
    -5.33749999990535, -4.33749999990946), (-5.33749999990535, -4.375), (-5.25, 
    -4.44327265024185)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[166], points=((
    -4.7625000000109, -4.2374999999891), (-4.725, -4.2), (-4.80921292304993, 
    -4.30664771795273), (-4.82629108428955, -4.375), (-4.9, -4.375), (-4.9, 
    -4.375)))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[198])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[197])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[182], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[146])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[178], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[146])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[194], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[144])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[190], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[144])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[202], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[206], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[146], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[144], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[143]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.71958013002579, 
    -5.28041986997421), point2=(-6.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[201])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-6.0, -5.0), point2=(
    -5.65336367478096, -4.65336367478096))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[201], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[202])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.34663632512863, 
    -4.34663632512863), point2=(-5.0, -4.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[203])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -4.0), point2=(
    -4.76250000000318, -4.23749999999682))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[203], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[204])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.28041986997422, 
    -5.71958013002578), point2=(-5.0, -6.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[205])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -6.0), point2=(
    -4.8474341353332, -5.84743413533313))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[205], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[206])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-4.15256586467207, 
    -5.15256586467207), point2=(-4.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[207])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-4.0, -5.0), point2=(
    -4.23750000010383, -4.76249999989617))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[207], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[208])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[165], points=((-6.0, 
    -5.0), (-5.95, -5.0), (-6.125, -4.81899136304855), (-5.95, 
    -5.16055375337601), (-6.01151275634766, -5.17080062627792)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[162], points=((-5.0, 
    -4.0), (-5.0, -4.025), (-4.96974730491638, -4.2), (-4.96291613578796, 
    -4.375)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[162], points=((-5.0, 
    -4.0), (-5.0, -4.025), (-4.9, -4.64137881994247)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[163], points=((-4.0, 
    -5.0), (-4.025, -5.0), (-3.85, -4.78483504056931), (-4.43007874488831, 
    -5.25)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[164], points=((-5.0, 
    -6.0), (-5.0, -5.95), (-5.075, -5.6)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], points=((
    -4.66454348172301, -6.03032478894348), (-4.725, -6.03836917877197), (
    -4.60769104957581, -5.95), (-4.55, -5.95)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], points=((
    -4.1502662481176, -4.67526624785789), (-4.2, -4.6618726849556), (
    -4.11584138870239, -4.725)))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -4.58013197779663, -4.58013197779648), value=0.1, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[166], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[170])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -5.45280447602272, -4.54719552397728), value=0.2, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[178], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[182])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -5.42208325862885, -5.42208325862885), value=0.3, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[206], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[202])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -4.58182021975517, -5.41817978024483), value=0.4, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[194], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[190])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], textPoint=(
    -4.65209412574768, -5.40647864341736), value=0.4)
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].redo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[12], ))
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[197], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[162], textPoint=(
    -5.09954106807709, -4.30323201417923), value=1.0)
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -4.77480301260948, -5.22519698739052), value=1.4142135623731, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[164], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[163])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(-5.0, 
    -5.22886621952057), value=2.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[165], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[163])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[197], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[162], textPoint=(
    -5.08929419517517, -4.34080404043198), value=1.0)
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1161], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -5.67672896268641, -5.46459692833151), (-5.6631190776825, -5.425), (-5.775, 
    -5.425), (-5.775, -5.425)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1136], ))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[176], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[181])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[960], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[944], ))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[180], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[177])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[955], ))
mdb.models['Model-1'].sketches['__edit__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__edit__'].geometry[181], radius=1.0, 
    textPoint=(4.68912506103516, -13.8850154876709))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[939], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[927], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[959], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[175], points=((
    4.78762149810791, -14.7876214981079), (4.77893161773682, -14.796311378479), 
    (4.65478420257568, -14.7566890716553), (4.61516189575195, 
    -14.7751798629761), (4.59931373596191, -14.7831039428711)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192], points=((5.0, 
    -15.0), (5.0, -15.05), (5.25, -15.05)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[175], points=((
    -4.88695960491896, -5.11304039508104), (-4.9, -5.075), (-4.9, 
    -5.17731320858002), (-4.97496305406094, -5.25), (-4.64612114429474, -5.25), 
    (-4.44271385669708, -5.18409335613251)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[175], points=((
    -4.85305827111006, -5.14694172888994), (-4.9, -5.15019226074219), (-5.075, 
    -4.9), (-4.2, -4.9603453874588), (-4.27320754528046, -5.25)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[175], points=((
    -4.32419911026955, -5.67580088973045), (-4.31727921962738, 
    -5.66888105869293), (-4.55, -5.68583166599274), (-4.725, 
    -5.71295267343521), (-4.84274826943874, -5.775)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[943], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[198], points=((
    4.01005050633883, -14.2928932188135), (4.025, -14.2928932188135), (
    3.93692588806152, -14.35), (3.85, -14.2361068725586), (3.85, 
    -14.253119468689), (3.94713306427002, -14.35), (3.85, -14.175), (3.85, 
    -14.175)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].redo()
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[181], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[960], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1179], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1067], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1068], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[819], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[807]))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[159], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[154])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[172], points=((5.0, 
    4.06632783823516), (5.075, 4.025), (5.075, 4.725), (4.9, 4.375), (5.075, 
    4.2), (5.075, 4.025), (5.075, 3.85)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[174], points=((
    4.18945277177771, 4.26016344989638), (4.2, 4.2), (4.025, 4.2), (4.025, 
    4.2), (3.85, 4.2), (3.85, 4.025)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[172], points=((5.0, 
    4.06632783823516), (5.075, 4.025), (5.075, 4.2), (5.075, 4.375), (5.075, 
    4.55)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[159], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[154])
mdb.models['Model-1'].sketches['__edit__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__edit__'].geometry[159], radius=1.0, 
    textPoint=(4.77383232116699, 4.27454376220703))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[21], ))
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    5.21841907501221, 4.77677631378174), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[172], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[168])
mdb.models['Model-1'].sketches['__edit__'].dimensions[15].setValues(value=0.5)
mdb.models['Model-1'].sketches['__edit__'].dimensions[15].setValues(value=0.6)
mdb.models['Model-1'].sketches['__edit__'].dimensions[15].setValues(value=0.7)
mdb.models['Model-1'].sketches['__edit__'].dimensions[15].setValues(value=0.8)
mdb.models['Model-1'].sketches['__edit__'].dimensions[15].setValues(value=0.7)
mdb.models['Model-1'].sketches['__edit__'].dimensions[15].setValues(value=0.1)
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[20], ))
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    5.35824584960938, -14.5685167312622), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[196], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192])
mdb.models['Model-1'].sketches['__edit__'].dimensions[18].setValues(value=0.7)
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[194])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[215], points=((-15.0, 
    -14.0074157333214), (-15.0, -14.0), (-15.006157875061, -14.2208003997803), 
    (-14.9971828460693, -14.3958101272583), (-14.9904518127441, 
    -14.4474153518677)))
mdb.models['Model-1'].sketches['__edit__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[194], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[193], symmetryAxis=
    mdb.models['Model-1'].sketches['__edit__'].geometry[184])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[194], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[190])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -15.1073246002197, -14.8508787155151), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[215], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[204])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[184], points=((-15.0, 
    4.1940273477825), (-15.05, 4.2), (-15.05, 4.55), (-15.05, 4.55)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[859], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[871]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[856], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[875]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[807], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[819]))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[891], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[856], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[875]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[184], points=((-15.0, 
    4.1940273477825), (-15.0, 4.2), (-14.9972047805786, 4.375), (
    -14.9924392700195, 4.55), (-14.9924392700195, 4.62756633758545)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[165], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[170])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -15.0751667022705, 4.82600021362305), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[184], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[180])
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.1', name=
    'ThickTR', path='dimensions[15]')
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1065], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1173], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1070], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1167], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1167], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1167], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1069], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[807], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[819]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1082], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1078], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[871], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[859], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[830], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[811], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[826], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[814]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[846], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[19], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[876], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[164], points=((
    -14.5620312690735, 4.56203126907346), (-14.525, 4.55), (-14.5953578948975, 
    4.44992065429688), (-14.525, 4.375), (-14.35, 4.375), (-14.175, 4.2), (
    -14.175, 4.2)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[876], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[165], points=((-15.0, 
    4.63065052032471), (-14.9965972900391, 4.63065052032471), (
    -14.8273468017578, 4.62800598144531), (-14.7823905944824, 
    4.6332950592041)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[164], points=((
    -14.6721415519715, 4.67214155197141), (-14.7, 4.65974044799805), (-14.35, 
    4.725)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[933], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[196], points=((5.0, 
    -14.5), (5.0, -14.5), (4.9, -14.5851621627808)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[173], points=((5.0, 
    -14.5714330673218), (4.99479007720947, -14.5714330673218), (
    4.98526191711426, -14.5670356750488), (4.99992084503174, -14.525), (
    5.00724983215332, -14.4886102676392), (5.00798320770264, 
    -14.4666213989258), (5.005784034729, -14.4548940658569), (5.00358581542969, 
    -14.4424333572388), (5.00358581542969, -14.4373035430908)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[924], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], points=((
    -5.68258707644362, -4.45883427979369), (-5.775, -4.55), (-5.95, -4.55)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], points=((
    -5.71602420927901, -4.4253971469583), (-5.775, -4.375), (-5.775, -4.55)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], points=((
    -5.54107136377346, -4.31730603549252), (-5.6, -4.375), (-5.425, -4.2)))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], points=((
    -5.62199133713315, -5.83412337224406), (-5.6, -5.775), (-5.6, -5.95), (
    -5.6, -5.95)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -5.70776618246138, -5.62839388476025), (-5.775, -5.6), (-5.95, -5.25)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[146], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[163])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[197], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[198])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], points=((
    -5.65551877725268, -5.44356521735288), (-5.6578409075737, -5.425), (-5.775, 
    -5.35981410741806)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].EqualDistanceConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[183], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], midpoint=
    mdb.models['Model-1'].sketches['__edit__'].vertices[161])
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.2', name=
    'ThickTL', path='dimensions[16]', previousParameter='ThickTR')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.3', name=
    'ThickBR', path='dimensions[18]', previousParameter='ThickTL')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.25', name=
    'ThickBL', path='dimensions[17]', previousParameter='ThickBR')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickTR'].setValues(
    expression='0.5')
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[152])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[144], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[174])
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1196], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1155], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[808], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1154], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1153], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1158], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1157], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1156], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1195]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[818], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[202], points=((
    -5.41161165235444, -5.58838834764556), (-5.425, -5.6), (-5.075, 
    -5.33516821265221)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[201], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[205]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[144], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[206], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[144], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[207]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[202], points=((
    -5.41386734448581, -5.59064215547655), (-5.425, -5.6), (-5.25, -5.425), (
    -5.17211586236954, -5.425), (-5.075, -5.425), (-5.075, -5.34496876597404), 
    (-5.075, -5.33026775717735), (-5.075, -5.25)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[206], points=((
    -5.27492747771706, -5.09990335229028), (-5.25, -5.075), (-5.425, -5.25)))
mdb.models['Model-1'].sketches['__edit__'].dimensions[18].setValues(textPoint=(
    -4.725, -5.6))
mdb.models['Model-1'].sketches['__edit__'].dimensions[18].setValues(textPoint=(
    -4.375, -5.6))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[190], points=((
    -4.60822392646504, -5.60390810789091), (-4.55, -5.6), (-4.9, 
    -5.34496876597404), (-5.075, -5.34006842970848), (-5.075, -5.425), (
    -5.16721564531326, -5.425), (-5.25, -5.34496876597404), (-4.99080377817154, 
    -5.34006842970848), (-4.9, -5.33516821265221)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[190], points=((
    -4.88848191086675, -5.32365012351896), (-4.9, -5.25), (-4.9, -5.425), (
    -4.98590356111526, -5.425)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[202], points=((
    -5.22492586737346, -5.39990110557877), (-5.25, -5.425), (-5.075, -5.25), (
    -5.075, -5.25)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[190], points=((
    -4.88651779775049, -5.32561423663523), (-4.9, -5.25), (-4.9, -5.25), (
    -4.99570399522781, -5.25)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[171])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[146], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[202], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[146], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[203], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[204], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[208], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1192]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-6.0, -5.0), point2=(
    -5.0, -4.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -4.0), point2=(
    -4.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[209], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[210])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-4.0, -5.0), point2=(
    -5.0, -6.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[210], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[211])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-5.0, -6.0), point2=(
    -6.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[211], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[212])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[209], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[212], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[211], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[210]))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[212])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[211])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[202], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[190])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[170], points=((
    -4.32326192184793, -4.67681530892186), (-4.375, -4.725), (-4.55, -4.725)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[19], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[170], points=((
    -4.32326192184793, -4.67681530892186), (-4.375, -4.725), (-4.55, -4.9), (
    -4.55, -4.9), (-4.55, -4.9), (-4.375, -5.075), (-4.62817937135696, 
    -4.725)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[210])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-14.4452108884542, 
    -14.2701988257408), point2=(-14.2701988257408, -14.4452108884542))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[186], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[213])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[213], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[24], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -14.5636215209961, -14.153844833374), value=0.25, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[209], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[208])
mdb.models['Model-1'].sketches['__edit__'].deleteParameter('ThickBL')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.25', name=
    'ThickBL', path='dimensions[26]', previousParameter='ThickBR')
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[17], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.50857864383797, 
    -14.2964466094379), point2=(4.29644660943791, -14.508578643838))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[179], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[214])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[214], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    3.85281467437744, -14.6058139801025), value=0.3, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[199], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[198])
mdb.models['Model-1'].sketches['__edit__'].deleteParameter('ThickBR')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.3', name=
    'ThickBR', path='dimensions[27]', previousParameter='ThickBL')
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[18], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[190], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[196], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[188], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[189], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[195], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[187]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[182], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[183]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1144], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[204], points=((-15.0, 
    -15.0), (-15.05, -15.05), (-14.875, -14.875), (-14.818977355957, -14.875), 
    (-14.818977355957, -14.875)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[199], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[200]))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[192], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[191])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[214], points=((
    -14.9715130936832, -15.0284060131693), (-14.9715130936832, -15.05), (
    -14.875, -14.875), (-14.8020524978638, -14.875), (-14.8020524978638, 
    -14.875)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[215], points=((
    -14.9385726721816, -14.3834164254903), (-14.9385726721816, -14.35), (
    -14.875, -14.35), (-14.8054370880127, -14.35), (-14.7851276397705, -14.35), 
    (-14.8122072219849, -14.35)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[192], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[191])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].Spot(point=(-15.0, -15.0))
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[224])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[214], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[224])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[192], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[191])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[204], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[214])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[193], points=((
    -14.4607811830769, -14.7557272861053), (-14.4506759643555, 
    -14.7590579986572), (-14.2536392211914, -14.7590579986572), (
    -14.1157140731812, -14.7), (-14.175, -14.7656259536743), (
    -14.2667751312256, -14.7951812744141), (-14.35, -14.818169593811), (-14.35, 
    -14.875), (-14.35, -14.875), (-14.2963304519653, -14.7), (
    -14.2799110412598, -14.7), (-14.35, -14.7), (-14.35, -14.76891040802), (
    -14.35, -14.7951812744141), (-14.35, -14.8017492294312)))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[186], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[194])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[193], points=((
    -14.3280290257936, -14.5192984501735), (-14.35, -14.525), (-14.25035572052, 
    -14.525), (-14.175, -14.525), (-14.1157140731812, -14.4142446517944), (
    -14.0861587524414, -14.35), (-14.0, -14.2861709594727), (-14.0960102081299, 
    -14.35), (-14.175, -14.525), (-14.2339363098145, -14.525), (
    -14.2963304519653, -14.6178483963013), (-14.35, -14.7), (-14.4375400543213, 
    -14.7), (-14.525, -14.7), (-14.525, -14.7), (-14.35, -14.4109601974487), (
    -14.2372198104858, -14.2303438186646), (-14.0861587524414, 
    -14.0661468505859)))
mdb.models['Model-1'].sketches['__edit__'].dimensions[26].setValues(textPoint=(
    -14.175, -14.35))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[184], points=((
    -14.3158807754517, -14.3158807754517), (-14.2963304519653, -14.35), (
    -14.467095375061, -14.525), (-14.525, -14.525), (-14.525, 
    -14.5817251205444)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[208], points=((
    -14.2308691038391, -14.4076457991358), (-14.2308691038391, 
    -14.4076457991358), (-14.4441080093384, -14.525), (-14.6181573867798, 
    -14.7), (-14.7, -14.7), (-14.7, -14.7), (-14.7, -14.7), (-14.6115894317627, 
    -14.6375522613525), (-14.525, -14.5981454849243), (-14.4703798294067, 
    -14.525), (-14.35, -14.525), (-14.35, -14.525), (-14.2963304519653, 
    -14.525), (-14.2536392211914, -14.525), (-14.175, -14.4602193832397), (
    -14.175, -14.4503679275513)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[191], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[194])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[171], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[174]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192], points=((5.0, 
    -15.0), (5.0, -15.0), (4.9, -14.875), (4.9, -14.875)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[172], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[173]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192], points=((4.9, 
    -14.875), (4.9, -14.875), (4.93065452575684, -14.8991670608521), (
    4.93420791625977, -14.9098281860352), (4.9377613067627, -14.9258193969727), 
    (4.9, -14.9382562637329), (4.8640251159668, -14.9133815765381), (4.9, 
    -14.9355916976929), (4.92354679107666, -14.9409217834473), (
    4.91821670532227, -14.9373683929443)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].Spot(point=(5.0, -15.0))
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[225])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[225])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[176], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[177])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[198], points=((
    4.31902203178929, -14.5311540661895), (4.31902203178929, -14.525), (4.375, 
    -14.525), (4.375, -14.5450468063354), (4.39554023742676, 
    -14.546257019043)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[180], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[178])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1183], ))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[177], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[180])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[198], points=((
    4.31902203178929, -14.5311540661895), (4.31902203178929, -14.525), (
    4.34771060943604, -14.5587663650513), (4.375, -14.57532787323)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[180], points=((
    4.49883651291116, -14.9597211277591), (4.50173187255859, 
    -14.9595537185669), (4.5182933807373, -14.875), (4.55, -14.875), (4.55, 
    -14.8121566772461), (4.55, -14.7856578826904), (4.50173187255859, 
    -14.76247215271), (4.4835147857666, -14.7475671768188)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[206], points=((
    -5.19445512825671, -5.01767843296008), (-5.25, -5.075), (-5.6, -5.25), (
    -5.775, -5.6), (-5.95, -5.775), (-6.125, -5.775), (-6.475, -5.95), (-6.475, 
    -5.95)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[190], points=((
    -4.56330924646179, -4.74008594175843), (-4.55, -4.725), (-5.075, -5.6), (
    -5.775, -6.125), (-5.95, -6.125), (-5.95, -6.3), (-5.775, -6.3)))
mdb.models['Model-1'].sketches['__edit__'].SymmetryConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[186], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[185], symmetryAxis=
    mdb.models['Model-1'].sketches['__edit__'].geometry[184])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[190], points=((
    -5.96611263196686, -6.14288932726352), (-5.95, -6.125), (-5.775, -5.95), (
    -5.775, -5.95), (-5.95, -5.95)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[186], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[184])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[184], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[185])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[198], points=((
    4.69550252305239, -14.9076345574524), (4.725, -14.875), (4.46660423278809, 
    -14.7), (4.375, -14.6104145050049), (4.2, -14.525), (4.55, -14.7), (4.55, 
    -14.7878913879395), (4.55, -14.875), (4.55, -14.875), (4.55, 
    -14.965368270874), (4.725, -15.05), (5.25, -15.225), (4.55, -15.4), (4.55, 
    -15.225), (4.9, -14.7), (5.075, -15.225), (5.075, -15.225)))
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[179], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[175])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[175], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[178])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[212], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[211], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[210], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[209], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1207], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1204], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1211], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1201]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[152], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[151], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[150]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[168], points=((5.0, 
    5.0), (5.0, 5.0), (4.92300891876221, 4.96639251708984)))
mdb.models['Model-1'].sketches['__edit__'].Spot(point=(5.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[226])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[168], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[226])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[154], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[155])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(4.19015514054799, 
    4.28823369683007), point2=(4.28823369683057, 4.19015514054752))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[215])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    4.29511996885136, 4.19747614169714), value=0.2, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[174], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[175])
mdb.models['Model-1'].sketches['__edit__'].deleteParameter('ThickTR')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.2', name=
    'ThickTR', path='dimensions[28]', previousParameter='ThickBR')
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[153], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[156])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[156], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[157])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[15], ))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[170], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[194])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[163], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[160], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[161], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[162]))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[180], points=((-15.0, 
    5.0), (-15.0, 5.0), (-14.9428653717041, 4.9)))
mdb.models['Model-1'].sketches['__edit__'].Spot(point=(-15.0, 5.0))
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[227])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[180], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[227])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[185], points=((-14.5, 
    4.50129303236791), (-14.525, 4.50129303236791), (-14.635703086853, 4.55), (
    -14.7, 4.55), (-14.7, 4.55), (-14.7505960464478, 4.55), (-14.7904567718506, 
    4.55)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[166], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[165])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[167], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[167])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[167], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[168])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[168], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[164])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[187], points=((
    -14.8949461316681, 4.75362247370661), (-14.875, 4.725), (-14.7, 4.55), (
    -14.525, 4.375)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[187], points=((
    -14.8949747353787, 4.7535534182406), (-14.875, 4.725), (-14.7578945159912, 
    4.66412544250488), (-14.7, 4.55), (-14.525, 4.375), (-13.9095602035522, 
    4.09265422821045), (-13.2351531982422, 3.85), (-13.0186328887939, 
    3.77319812774658), (-13.9237585067749, 4.375), (-14.7, 5.075), (-14.7, 
    5.25), (-14.5839681625366, 4.97648334503174), (-14.525, 4.9), (-14.525, 
    4.725), (-14.35, 4.66412544250488), (-14.35, 4.55), (-14.5839681625366, 
    4.55), (-14.5981664657593, 4.55)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[187], points=((
    -14.8949747462692, 4.75355339194855), (-14.875, 4.725), (-14.8040380477905, 
    4.66767501831055), (-14.7649936676025, 4.61088275909424), (-14.7, 4.725), (
    -14.7, 4.82740306854248), (-14.5875177383423, 4.9), (-14.525, 
    4.96583461761475), (-14.525, 5.0084285736084), (-14.4526357650757, 5.075), 
    (-14.7, 4.725), (-15.1270437240601, 4.375), (-15.225, 4.30562496185303)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[187], points=((
    -14.8949742861563, 4.75355450275944), (-14.875, 4.725), (-14.875, 4.55), (
    -14.875, 4.55), (-14.875, 4.46535301208496), (-14.875, 4.375), (-14.875, 
    4.375), (-14.875, 4.375)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[170], points=((
    -14.9476660982501, 4.78753136573602), (-14.9460182189941, 
    4.79190826416016), (-15.05, 4.725), (-15.1163949966431, 4.55), (
    -15.1412420272827, 4.55)))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1191], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[187], points=((
    -14.894974163468, 4.75355479895522), (-14.875, 4.725), (-14.875, 
    4.64637851715088), (-14.7898397445679, 4.55), (-14.7, 4.55), (-14.7, 
    4.45470428466797), (-14.6265621185303, 4.375), (-14.6052656173706, 4.375), 
    (-14.525, 4.2985258102417), (-14.525, 4.2), (-14.525, 4.2)))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-14.2915784562553, 
    4.43299794537016), point2=(-14.4329979453702, 4.29157845625534))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[167], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[216])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[216], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -14.2215738296509, 4.51888179779053), value=0.65, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[186], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[187])
mdb.models['Model-1'].sketches['__edit__'].dimensions[29].setValues(value=0.5)
mdb.models['Model-1'].sketches['__edit__'].dimensions[29].setValues(value=0.4)
mdb.models['Model-1'].sketches['__edit__'].dimensions[29].setValues(value=0.3)
mdb.models['Model-1'].sketches['__edit__'].dimensions[29].setValues(value=0.2)
mdb.models['Model-1'].sketches['__edit__'].deleteParameter('ThickTL')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.2', name=
    'ThickTL', path='dimensions[29]', previousParameter='ThickTR')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickTL'].setValues(
    expression='0.6')
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[16], ))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[166], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[178])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[182], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[206])
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].FilletByRadius(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[156], curve2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[167], nearPoint1=(
    -4.89045959711075, -4.67216640710831), nearPoint2=(-4.89823991060257, 
    -4.65660578012466), radius=0.3)
mdb.models['Model-1'].sketches['__edit__'].FilletByRadius(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[168], curve2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[186], nearPoint1=(
    -5.35728174448013, -5.06896536052227), nearPoint2=(-5.36506205797195, 
    -5.17400024831295), radius=0.3)
mdb.models['Model-1'].sketches['__edit__'].FilletByRadius(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[185], curve2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[178], nearPoint1=(
    -5.11998039484024, -5.26347452402115), nearPoint2=(-4.91380053758621, 
    -5.27903527021408), radius=0.3)
mdb.models['Model-1'].sketches['__edit__'].FilletByRadius(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[179], curve2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[157], nearPoint1=(
    -4.64148765802383, -5.14676897227764), nearPoint2=(-4.71540123224258, 
    -4.8394443243742), radius=0.3)
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[31], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[32], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[33]))
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[217], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[218])
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[218], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[219])
mdb.models['Model-1'].sketches['__edit__'].EqualRadiusConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[219], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[220])
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.3', name=
    'fillet', path='dimensions[30]', previousParameter='ThickTL')
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[168], points=((
    -5.78176112240014, -4.6425029463118), (-5.775, -4.725), (-5.775, 
    -4.63469102978706), (-5.425, -4.375), (-5.95, -4.1241706609726)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[167], points=((
    -5.16312453383747, -4.4126113974506), (-5.15570420026779, -4.375), (-5.425, 
    -4.375), (-5.86762255430222, -4.025), (-5.33836740255356, -4.375), (
    -5.33836740255356, -4.28809916973114)))
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='0.3', name=
    'fillet', path='dimensions[30]', previousParameter='ThickTL')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.5')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='1')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.1')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='1')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='2')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='3')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.5')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='1.5')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='2.5')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickTR'].setValues(
    expression='0.1')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickBL'].setValues(
    expression='0.1')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickBR'].setValues(
    expression='0.7')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickBL'].setValues(
    expression='0.15')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickBR'].setValues(
    expression='0.3')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickTR'].setValues(
    expression='0.45')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickBL'].setValues(
    expression='0.1')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickTR'].setValues(
    expression='0.5')
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickTL'].setValues(
    expression='0.7')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#2b ]', 
    ), ), name='Set-24')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[0].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-24'])
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#10 ]', 
    ), ), name='Set-25')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[1].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-25'])
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#2a ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.5)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh()
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.3)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#11 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[2], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[5], MIDDLE))
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#40 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#40 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[26], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[35], MIDDLE))
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#30 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#20 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[27], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[25], MIDDLE))
mdb.models['Model-1'].parts['Cross'].deleteMesh(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#10 ]', 
    ), ))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#10 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[21], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[24], MIDDLE))
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#2bf ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.5)
mdb.models['Model-1'].parts['Cross'].generateMesh()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[215], ))
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Cross'].backup()
mdb.models['Model-1'].parts['Cross'].deleteFeatures(('Partition face-2', 
    'Partition face-3', 'Partition face-5', 'Partition face-4'))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[2], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[5], MIDDLE))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#10 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[23], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[26], MIDDLE))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#10 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[24], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[21], MIDDLE))
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#10 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[23], MIDDLE), point2=
    mdb.models['Model-1'].parts['Cross'].InterestingPoint(
    mdb.models['Model-1'].parts['Cross'].edges[20], MIDDLE))
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#ff ]', 
    ), ), name='Set-28')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[0].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-28'])
mdb.models['Model-1'].parts['Cross'].Set(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#100 ]', 
    ), ), name='Set-29')
mdb.models['Model-1'].parts['Cross'].sectionAssignments[1].setValues(region=
    mdb.models['Model-1'].parts['Cross'].sets['Set-29'])
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#fe ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Cross'].setMeshControls(regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), technique=STRUCTURED)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Cross'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#100 ]', 
    ), ))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#100 ]', 
    ), ), point1=mdb.models['Model-1'].parts['Cross'].vertices[13], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[27])
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), point1=mdb.models['Model-1'].parts['Cross'].vertices[5], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[9])
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), point1=mdb.models['Model-1'].parts['Cross'].vertices[5], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[9])
mdb.models['Model-1'].parts['Cross'].PartitionFaceByShortestPath(faces=
    mdb.models['Model-1'].parts['Cross'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), point1=mdb.models['Model-1'].parts['Cross'].vertices[9], point2=
    mdb.models['Model-1'].parts['Cross'].vertices[5])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='20', name=
    'Width', path='dimensions[0]')
mdb.models['Model-1'].sketches['__edit__'].parameters.changeKey('Width', 
    'SubWidth')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression='20', name=
    'SubHeight', path='dimensions[1]', previousParameter='SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='10')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='10')
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[23], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[24]))
mdb.models['Model-1'].sketches['__edit__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__edit__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-10.0, 10.0), point2=(
    10.0, -10.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(-10.0, -10.0), point2=(
    10.0, 10.0))
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7]))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4])
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='10')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='10')
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='10')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='10')
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], points=((10.0, 
    10.0), (10.0, 10.0), (9.57255172729492, 9.38771152496338), (
    9.35262298583984, 9.186110496521), (9.13269519805908, 8.75), (
    8.41792869567871, 9.07614612579346), (8.30796432495117, 10.0), (
    7.97807216644287, 9.46102046966553), (7.5, 9.09447383880615), (7.5, 8.75)))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[6])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[7])
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='20')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='20')
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='15')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='15')
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by sebastian.chirinos on 2020_09_09-04.08.08; build 2018 2017_11_07-11.21.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Cross'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Cross'].backup()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1233], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1224], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1218], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1242]))
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[25], ))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4], points=((0.0, 0.0), 
    (0.0, 0.0), (1.91141247749329, 0.0), (2.84952092170715, 0.0), (
    3.30517411231995, 0.0), (3.75, 0.361842155456543), (4.51131057739258, 
    1.80920886993408), (5.0, 2.5), (5.0, 3.01534652709961), (5.6102352142334, 
    3.3101806640625), (6.25, 3.75), (6.25, 3.75), (6.57514762878418, 3.75), (
    3.75, 2.9885425567627), (2.09903454780579, 3.20296764373779), (
    1.7505943775177, 2.9885425567627), (1.25, 2.5), (0.490849733352661, 1.25), 
    (0.0, 0.871100425720215), (0.0, 0.495857238769531), (0.0, 0.0), (0.0, 0.0), 
    (-1.25, 0.92470645904541), (-1.70700335502625, 1.25), (-1.81421446800232, 
    1.78240489959717)))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(sketch=
    mdb.models['Model-1'].sketches['__edit__'], upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'], 
    vertices=(mdb.models['Model-1'].parts['Cross'].vertices[17], 
    mdb.models['Model-1'].parts['Cross'].vertices[18], 
    mdb.models['Model-1'].parts['Cross'].vertices[19], 
    mdb.models['Model-1'].parts['Cross'].vertices[20]))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[204], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[242])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[1218], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1224], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1233], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[1242]))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[243])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dimensions[23].setValues(textPoint=(
    6.475, -14.175))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192], points=((5.0, 
    -15.0), (5.075, -15.05), (4.025, -14.0), (2.975, -13.475), (2.8, -12.6), (
    2.975, -12.775), (3.15, -12.425), (3.15, -12.25), (3.15, -12.25), (3.15, 
    -12.25)))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[192], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[243])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[204], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[242])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[240], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[168])
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[241], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[180])
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
# Save by sebastian.chirinos on 2020_09_09-04.32.02; build 2018 2017_11_07-11.21.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='10')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='10')
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Cross'].restore()
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['ThickTL'].setValues(
    expression='0.6')
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[185], points=((-14.5, 
    5.0), (-14.525, 5.0), (-14.4456310272217, 4.99998569488525), (
    -14.4532585144043, 4.99235820770264)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[185], points=((-14.5, 
    5.0), (-14.525, 5.0), (-14.4894876480103, 4.99235820770264)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].vertices[185], points=((-14.5, 
    5.0), (-14.525, 5.0), (-14.4913940429688, 4.94659519195557), (
    -14.4913940429688, 4.94468879699707)))
mdb.models['Model-1'].sketches['__edit__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__edit__'].geometry[169], points=((
    -14.4279725137985, 4.86861293717378), (-14.4227495193481, 4.9), (-14.35, 
    4.78451824188232)))
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[166], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[169])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    -11.8110933303833, 5.15613651275635), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[168], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[180])
mdb.models['Model-1'].sketches['__edit__'].dimensions[34].setValues(reference=
    ON)
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    -15.1950492858887, -13.930567741394), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[180], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[204])
mdb.models['Model-1'].sketches['__edit__'].dimensions[35].setValues(reference=
    ON)
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='15')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='15')
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[24], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[23], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[25]))
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[154], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[176])
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[176], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[191])
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[191], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[165])
mdb.models['Model-1'].sketches['__edit__'].Parameter(name='SubWidth', path=
    'dimensions[34]', previousParameter='fillet')
mdb.models['Model-1'].sketches['__edit__'].Parameter(expression=
    '0.025*SubWidth', name='CornerEdge', path='dimensions[22]', 
    previousParameter='SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.5')
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.05*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters.changeKey('ThickTR', 
    'Thick13')
mdb.models['Model-1'].sketches['__edit__'].parameters.changeKey('ThickTL', 
    'Thick24')
mdb.models['Model-1'].sketches['__edit__'].deleteParameter('ThickBL')
mdb.models['Model-1'].sketches['__edit__'].deleteParameter('ThickBR')
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[26], 
    mdb.models['Model-1'].sketches['__edit__'].dimensions[27]))
mdb.models['Model-1'].sketches['__edit__'].unsetConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[215], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[216], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[214], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[213]))
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[216], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[214])
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[215], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[213])
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[213], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[214], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[215], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[216]))
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.04*SubWidth', previousParameter='Thick13')
#* Expression "0.04*SubWidth" uses parameters that appear before they are 
#* defined.
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    previousParameter='SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.03*SubWidth', previousParameter='fillet')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.03*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.04*SubWidth')
#* Expression "0.04*SubWidth" uses parameters that appear before they are 
#* defined.
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    previousParameter='SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.04*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='3')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.01*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    previousParameter='SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
# Save by sebastian.chirinos on 2020_09_09-05.11.13; build 2018 2017_11_07-11.21.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='5')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='5')
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='1')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='1')
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(textPoint=(
    3.75, -0.567967653274536))
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(textPoint=(
    0.187163829803467, 2.5))
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(textPoint=(
    2.5, 0.0))
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(textPoint=(
    1.25, 0.0))
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(textPoint=(
    0.0, 1.25))
mdb.models['Model-1'].sketches['__edit__'].parameters['SubWidth'].setValues(
    expression='0.01')
mdb.models['Model-1'].sketches['__edit__'].parameters['SubHeight'].setValues(
    expression='0.01')
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(textPoint=(
    0.10175609588623, -0.149336218833923))
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(textPoint=(
    0.0, 0.10617133975029))
mdb.models['Model-1'].sketches['__edit__'].dimensions[0].setValues(textPoint=(
    0.00789361447095871, 0.00924887880682945))
mdb.models['Model-1'].sketches['__edit__'].dimensions[1].setValues(textPoint=(
    0.0130104571580887, -0.0120712779462337))
mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
# Save by sebastian.chirinos on 2020_09_09-05.15.46; build 2018 2017_11_07-11.21.41 127140
# Save by sebastian.chirinos on 2020_09_14-23.19.39; build 2018 2017_11_07-11.21.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.1*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.14*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.11*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.08*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.07*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.05*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.4*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.1*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.25*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.005*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.01*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.05*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.07*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.00025)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.065*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.06*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh()
mdb.models['Model-1'].parts['Cross'].deleteSeeds()
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.00025)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.05*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh()
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.0005)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh()
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.00025)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh()
mdb.models['Model-1'].parts['Cross'].deleteSeeds()
mdb.models['Model-1'].parts['Cross'].seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].parts['Cross'].edges.getSequenceFromMask(('[#12 ]', 
    ), ), size=0.000125)
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.00025)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh()
mdb.models['Model-1'].parts['Cross'].deleteSeeds()
# Save by sebastian.chirinos on 2020_09_15-05.25.26; build 2018 2017_11_07-11.21.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Cross'].restore()
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.15*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.16*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.00031)
mdb.models['Model-1'].parts['Cross'].generateMesh()
# Save by sebastian.chirinos on 2020_09_29-04.12.54; build 2018 2017_11_07-11.21.41 127140
# Save by sebastian.chirinos on 2020_09_29-04.13.18; build 2018 2017_11_07-11.21.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.18*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['Cross'].backup()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Shell planar-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.25*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
# Save by sebastian.chirinos on 2020_09_29-04.21.32; build 2018 2017_11_07-11.21.41 127140
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['CornerEdge'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.18*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].parts['Cross'].deleteMesh()
mdb.models['Model-1'].parts['Cross'].deleteSeeds()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.02*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.00021)
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.04*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].redo()
#* Nothing to redo.
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.03*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.04*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.175*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.05*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.04*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick24'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].sketches['__edit__'].parameters['Thick13'].setValues(
    expression='0.2*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['Cross'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Cross'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].parameters['fillet'].setValues(
    expression='0.175*SubWidth')
mdb.models['Model-1'].parts['Cross'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Cross'].regenerate()
mdb.models['Model-1'].parts['Cross'].generateMesh()
# Save by sebastian.chirinos on 2020_09_29-04.56.35; build 2018 2017_11_07-11.21.41 127140
